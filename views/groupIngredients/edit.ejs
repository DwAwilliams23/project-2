<%- include('../partials/header') %>

<div class="input-div">
    <form action="/recipes/<%= recipe._id %>/ingredientGroups/<%= ingredientGroup._id %>/ingredients/<%= ingredient._id %>?_method=PUT" class="add-group-ingredient-form" id="add-group-ingredient-form" method="POST" onsubmit="convertQuantity()">
        <input  name="quantity" id="quantity-form-group-ingredient" class="quantity-form-group-ingredient" placeholder="Qty." value="<%= ingredient.quantity %>"></input>
        <select name="measurement" id="measurement-form">
            <option value="" <%= !ingredient.measurement ? 'selected' : '' %>>Measurement</option>
            <option value="Pinch" <%= ingredient.measurement === 'Pinch' ? 'selected' : '' %>>Pinch</option>
            <option value="Dash" <%= ingredient.measurement === 'Dash' ? 'selected' : '' %>>Dash</option>
            <option value="Teaspoon" <%= ingredient.measurement === 'Teaspoon' ? 'selected' : '' %>>Teaspoon</option>
            <option value="Tablespoon" <%= ingredient.measurement === 'Tablespoon' ? 'selected' : '' %>>Tablespoon</option>
            <option value="Ounce" <%= ingredient.measurement === 'Ounce' ? 'selected' : '' %>>Ounce</option>
            <option value="Pound" <%= ingredient.measurement === 'Pound' ? 'selected' : '' %>>Pound</option>
            <option value="Fluid Ounce" <%= ingredient.measurement === 'Fluid Ounce' ? 'selected' : '' %>>Fluid Ounce</option>
            <option value="Cup" <%= ingredient.measurement === 'Cup' ? 'selected' : '' %>>Cup</option>
            <option value="Pint" <%= ingredient.measurement === 'Pint' ? 'selected' : '' %>>Pint</option>
            <option value="Quart" <%= ingredient.measurement === 'Quart' ? 'selected' : '' %>>Quart</option>
            <option value="Gallon" <%= ingredient.measurement === 'Gallon' ? 'selected' : '' %>>Gallon</option>
        </select>
        <input  name="content" id="content-form-group-ingredient" class="content-form-group-ingredient" placeholder="Ingredient Name" value="<%= ingredient.content %>"></input>
        <input type="hidden" name="_method" value="PUT">
        <input type="submit" value="Update Ingredient" data-processing="false">
      <br>
    </form>
    <div class="error-message-container">
        <span class="error-message" id="quantity-error-group-ingredient"></span>
        <span class="error-message" id="content-error-group-ingredient"></span>
    </div>
</div>

<%- include('../partials/footer') %>

<script>
    
    function convertQuantity() {
        const quantityField = document.getElementById("quantity-form-group-ingredient");
        let quantityValue = quantityField.value;
    
        // Convert .33 to .333 and .66 to .667
        quantityValue = quantityValue.replace(/\.33(?![\d])/g, ".333").replace(/\.66(?![\d])/g, ".667").replace(/\.67(?![\d])/g, ".667");
        quantityField.value = quantityValue;
    
        // Continue with the form submission
    }

    const formElements = document.querySelectorAll("form");
    formElements.forEach((form) => {
        form.addEventListener("submit", (event) => {
            const submitButton = form.querySelector("[type='submit']");

            // Dynamically get the validation function based on the form's context
            const validationFunction = getValidationFunction(form);

            if (validationFunction && !validationFunction()) {
                event.preventDefault(); // Prevent the form from being submitted again
                submitButton.removeAttribute("data-processing"); // Re-enable data-processing attribute
                submitButton.disabled = false; // Re-enable the button visually
            } else {
                submitButton.setAttribute("data-processing", "true"); // Disable the submit button
                submitButton.disabled = true; // Disable the button visually
            }
        });
    });

    function getValidationFunction(form) {
        if (form.id === "add-group-ingredient-form") {
            return validateGroupIngredientForm;
        }
        return () => true;
    }

    function validateGroupIngredientForm() {
        const quantityField = document.getElementById("quantity-form-group-ingredient");
        const contentField = document.getElementById("content-form-group-ingredient");
        const quantityError = document.getElementById("quantity-error-group-ingredient");
        const contentError = document.getElementById("content-error-group-ingredient");

        // Reset error messages
        quantityError.textContent = "";
        contentError.textContent = "";

        let isValid = true;

        // Validate quantity (if filled, it must be a decimal number)
        const quantityValue = quantityField.value.trim();
        if (quantityValue !== "") {
        if (isNaN(quantityValue) || parseFloat(quantityValue) <= 0 || !/^(0?\.)?\d+(\.\d+)?$/.test(quantityValue)) {
            quantityError.textContent = "Please enter a valid positive decimal number (ex: .33 or 1.5 or 2).";
            isValid = false;
        }
        }

        // Validate content (must not be empty)
        const contentValue = contentField.value.trim();
        if (contentValue === "") {
        contentError.textContent = "Please enter an ingredient name.";
        isValid = false;
        }

        return isValid;
    }

</script>