<%- include('../partials/header') %>
<div id="recipe-div">
  <div id="show-ed-de-div">
    <div id="show-page">
      <div>Cuisine: </div>
      <div>
        <% if (recipe.cuisine) { %>
          <%= recipe.cuisine.name %>
        <% } %>
      </div>
      <div>Type of Food: </div>
      <div><%= recipe.foodType %></div>
      <div>Servings: </div>
      <div><%= recipe.serving %></div>
      <div>Prep Time: </div>
      <div><%= recipe.prepTime %></div>
      <div>Cook Time: </div>
      <div><%= recipe.cookTime %></div>
      <div>Total Time: </div>
      <div><%= recipe.totalTime %></div>
      <div>Have made before: </div>
      <div><%= recipe.haveMade ? 'Yes' : 'No' %></div>
    </div>
    <div id="ed-de-div">
      <div class="edit-button">
        <button id="editOriginalButton" onclick="replaceAndToggleEditButtons()" id="toggleEditButtons">
          <img src="/images/edit-icon.png" alt="Edit Icon" class="ed-de-icon"/>
        </button>
      </div>
      <div id="editNewButtons" class="hidden">
        <div id="confcanc-buttons">
          <button onclick="restoreAndToggleEditButton()">
            <img src="/images/edit-icon.png" alt="Edit Icon" class="ed-de-icon"/>
          </button>
          <a href="/recipes/<%= recipe._id %>/edit">
            <button type="submit">
              <img src="/images/check.png" alt="Check Icon" class="ed-de-icon" id="check-button"/>
            </button>
          </a>
        </div>
      </div>
      <div class="trash-button">
        <button id="deleteOriginalButton" onclick="replaceDeleteButtons()">
          <img src="/images/trash-icon.png" alt="Trash Icon" class="ed-de-icon">
        </button>
      </div>
      <div id="deleteNewButtons" class="hidden">
        <div id="confcanc-buttons">
          <button onclick="restoreDeleteButton()">
            <img src="/images/close.png" alt="Close Icon" class="ed-de-icon" id="close-button">
          </button>
          <form action="/recipes/<%= recipe._id %>?_method=DELETE" method="POST">
            <button type="submit">
              <img src="/images/check.png" alt="Check Icon" class="ed-de-icon" id="check-button"/>
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <% if (recipe.ingredients.length) { %>
    <div class="instruction-list">
      <h2>Ingredients</h2>
      <div id="servings-adjuster">
        <div>Servings</div>
        <div>
          <button id="decrease-servings" onclick="adjustServings(-1)">-</button>
          <input type="number" id="servings-input" value="<%= recipe.serving %>">
          <button id="increase-servings" onclick="adjustServings(1)">+</button>
        </div>
        <div>Display</div>
        <% const useFractions = true; %>
        <button id="toggleQuantityFormat" onclick="toggleQuantityFormat()">
          <%- useFractions ? '1.23' : '1/2' %>
        </button>
      </div>
      <ul>
        <% let total = 0 %>
        <% recipe.ingredients.forEach(function(r) { %>
          <li class="ingredient-li">
            <span class="ingredient-quantity" data-quantity="<%= r.quantity %>"><%= r.quantity %></span>
            <%= r.measurement %>
            <%= r.content %>
          </li>
          <div>
            <% if (user?._id.equals(r.user)) { %>
              <button class="list-edit-button">
                <a href="/recipes/<%= recipe._id %>/ingredients/<%= r._id %>/edit">
                  Edit
                </a>
              </button>
            <% } %>
          </div>
          <div>
            <% if (user?._id.equals(r.user)) { %>
              <form action="/ingredients/<%= r._id %>?_method=DELETE" method="POST" class="x-form">
                <button class="x-button" type="submit">X</button>
              </form>
            <% } %>
          </div>
        <% }); %>
      </ul>
    </div>
  <% } %>
  
  <div class="input-div">
    <% if(user) { %>
      <form class="add-form" id="add-ingredient-form" method="POST"
        action="/recipes/<%= recipe._id %>/ingredients"  onsubmit="convertQuantity()">
        <input  name="quantity" id="quantity-form" placeholder="Qty."></input>
        <select name="measurement" id="measurement-form">
          <option value="" selected disabled>Measurement</option>
          <option value="Pinch">Pinch</option>
          <option value="Dash">Dash</option>
          <option value="Ounce">Ounce</option>
          <option value="Teaspoon">Teaspoon</option>
          <option value="Tablespoon">Tablespoon</option>
          <option value="Pound">Pound</option>
          <option value="Fluid Ounce">Fluid Ounce</option>
          <option value="Cup">Cup</option>
          <option value="Pint">Pint</option>
          <option value="Quart">Quart</option>
          <option value="Gallon">Gallon</option>
        </select>
        <input  name="content" id="ingredient-form" placeholder="Ingredient Name"></input>
        <input type="submit" value="Add Ingredient">
      </form>
    <% } %>
  </div>

  <div class="input-div">
    <% if (user) { %>
      <form class="add-form" id="add-group-form" method="POST" action="/recipes/<%= recipe._id %>/groups">
        <input id="group-form" name="name" placeholder="Group Name"></input>
        <input type="submit" value="Add Group">
      </form>
    <% } %>
  </div>

  <% if (recipe.groups.length) { %>
    <div class="instruction-list">
      <div id="group-container">
        <% let total = 0 %>
        <% recipe.groups.forEach(function(group) { %>
          <div class="group-list">
            <div class="group-li">
              <h3 class="group-name"><%= group.name %></h3>
              <div class="group-edit">
                <% if (user?._id.equals(group.user)) { %>
                  <button class="list-edit-button">
                    <a href="recipes/groups/<%= group._id %>/edit">
                      Edit
                    </a>
                  </button>
                <% } %>
              </div>
              <div class="group-delete">
                <% if (user?._id.equals(group.user)) { %>
                  <form action="/groups/<%= group._id %>?_method=DELETE" method="POST" class="x-form">
                    <button class="x-button" type="submit">X</button>
                  </form>
                <% } %>
              </div>
            </div>
            <ul>
              <% group.ingredients.forEach(function(ingredient) { %>
                <li class="ingredient-li">
                  <span class="ingredient-quantity" data-quantity="<%= ingredient.quantity %>"><%= ingredient.quantity %></span>
                  <%= ingredient.measurement %>
                  <%= ingredient.content %>
                </li>
                <div>
                  <% if (user?._id.equals(ingredient.user)) { %>
                    <button class="list-edit-button">
                      <a href="/recipes/<%= recipe._id %>/groups/<%= group._id %>/ingredients/<%= ingredient._id %>/groupIngredientEdit">
                        Edit
                      </a>
                    </button>
                  <% } %>
                </div>
                <div>
                  <% if (user?._id.equals(ingredient.user)) { %>
                    <form action="/recipes/<%= recipe._id %>/groups/<%= group._id %>/ingredients/<%= ingredient._id %>?_method=DELETE" method="POST" class="x-form">
                      <button class="x-button" type="submit">X</button>
                    </form>
                  <% } %>
                </div>
              <% }); %>
            </ul>
            <div class="input-div">
              <% if (user) { %>
                <form class="add-form" id="add-ingredient-form" method="POST"
                  action="/recipes/<%= recipe._id %>/groups/<%= group._id %>/ingredients" onsubmit="convertQuantity()">
                  <input name="quantity" id="quantity-form" placeholder="Qty."></input>
                  <select name="measurement" id="measurement-form">
                    <option value="" selected disabled>Measurement</option>
                    <option value="Pinch">Pinch</option>
                    <option value="Dash">Dash</option>
                    <option value="Ounce">Ounce</option>
                    <option value="Teaspoon">Teaspoon</option>
                    <option value="Tablespoon">Tablespoon</option>
                    <option value="Pound">Pound</option>
                    <option value="Fluid Ounce">Fluid Ounce</option>
                    <option value="Cup">Cup</option>
                    <option value="Pint">Pint</option>
                    <option value="Quart">Quart</option>
                    <option value="Gallon">Gallon</option>
                  </select>
                  <input name="content" id="ingredient-form" placeholder="Ingredient Name"></input>
                  <input type="submit" value="Add Ingredient to Group">
                </form>
              <% } %>
              <div class="group-divider"></div>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  <% } %>
  
  <% if (recipe.steps.length) { %>
    <div class="instruction-list">
      <h2>Steps</h2>
        <ol>
          <% let total = 0 %>
          <% recipe.steps.forEach(function(r) { %>
                <li class="step-li">
                  <%= r.content %>
                </li>
                <div>
                  <% if (user?._id.equals(r.user)) { %>
                    <button class="list-edit-button">
                      <a href="recipes/steps/<%= r._id %>/edit">
                        Edit
                      </a>
                    </button>
                  <% } %>
                </div>
                <div>
                  <% if (user?._id.equals(r.user)) { %>
                    <form action="/steps/<%= r._id %>?_method=DELETE" method="POST" class="x-form">
                      <button class="x-button" type="submit">X</button>
                    </form>
                  <% } %>
                </div>
          <% }); %>
        </ol>
    </div>
  <% } %>
  
  <div class="input-div">
    <% if(user) { %>
      <form class="add-form" id="add-step-form" method="POST"
        action="/recipes/<%= recipe._id %>/steps">
        <textarea id="step-form" name="content" placeholder="Add New Step"></textarea>
        <input type="submit" value="Add Step">
      </form>
    <% } %>
  </div>

</div>
<%- include('../partials/footer') %>

<script>

  const originalServings = <%= recipe.serving %>;
  let currentServings = originalServings;

  function updateIngredientQuantities() {
    const scalingFactor = currentServings / originalServings;
    const ingredientQuantities = document.querySelectorAll(".ingredient-li .ingredient-quantity");

    ingredientQuantities.forEach(function (quantityElement) {
      const originalQuantity = parseFloat(quantityElement.getAttribute("data-quantity"));

      // Check if the originalQuantity is NaN
      if (isNaN(originalQuantity)) {
        quantityElement.style.display = "none"; // Hide the element
        return; // Exit the loop for this element
      } else {
        quantityElement.style.display = "inline";
      }

      let newQuantity = originalQuantity * scalingFactor; // as a floating-point number

      if (useFractions) {
        // Convert decimal to fraction
        newQuantity = decimalToFraction(newQuantity);
      } else {
        // Display decimal
        newQuantity = newQuantity.toFixed(2).replace(/\.?0+$/, "");
      }

      quantityElement.textContent = newQuantity;
    });
  }

  function decimalToFraction(decimal) {
    if (decimal === 0) return "0";

    const tolerance = 0.01; // Define your tolerance level for rounding

    let sign = 1;
    if (decimal < 0) {
      sign = -1;
      decimal = Math.abs(decimal);
    }

    let wholeNumberPart = Math.floor(decimal);
    let fractionalPart = decimal - wholeNumberPart;

    for (let denominator = 2; denominator <= 8; denominator++) {
      for (let numerator = 1; numerator < denominator; numerator++) {
        const fractionValue = numerator / denominator;
        if (Math.abs(fractionalPart - fractionValue) < tolerance) {
          let fraction = "";
          if (wholeNumberPart > 0) {
            fraction = wholeNumberPart + " ";
          }
          if (numerator === 1) {
            fraction += "1/" + denominator;
          } else {
            fraction += numerator + "/" + denominator;
          }
          return sign === -1 ? "-" + fraction : fraction;
        }
      }
    }

    return (sign === -1 ? "-" : "") + decimal.toFixed(2).replace(/\.?0+$/, "");
  }

  function convertQuantity() {
    const quantityField = document.getElementById("quantity-form");
    const quantityValue = quantityField.value;

    // Convert .33 to .333 and .66 to .667
    const convertedValue = quantityValue.replace(/\.33/g, ".333").replace(/\.66/g, ".667");
    quantityField.value = convertedValue;

    // Continue with the form submission
  }

  let useFractions = true; // By default, start with fractions

  function toggleQuantityFormat() {
    useFractions = !useFractions;
    updateIngredientQuantities();

    const toggleButton = document.getElementById("toggleQuantityFormat");
    toggleButton.innerText = useFractions ? '1.23' : '1/2';

  }

  function adjustServings(change) {
    const servingsInput = document.getElementById("servings-input");
    const newServings = parseInt(servingsInput.value) + change;

    if (newServings < 1) return;

    servingsInput.value = newServings;
    currentServings = newServings;
    updateIngredientQuantities();
  }

  updateIngredientQuantities();
    
  function replaceEditButtons() {
    var originalButton = document.getElementById("editOriginalButton");
    var newButtons = document.getElementById("editNewButtons");
    
    originalButton.classList.add("hidden");
    newButtons.classList.remove("hidden");
  }
  
  function restoreEditButton() {
    var originalButton = document.getElementById("editOriginalButton");
    var newButtons = document.getElementById("editNewButtons");
    
    originalButton.classList.remove("hidden");
    newButtons.classList.add("hidden");
  }
  
  function replaceDeleteButtons() {
    var originalButton = document.getElementById("deleteOriginalButton");
    var newButtons = document.getElementById("deleteNewButtons");
    
    originalButton.classList.add("hidden");
    newButtons.classList.remove("hidden");
  }
  
  function restoreDeleteButton() {
    var originalButton = document.getElementById("deleteOriginalButton");
    var newButtons = document.getElementById("deleteNewButtons");
    
    originalButton.classList.remove("hidden");
    newButtons.classList.add("hidden");
  }
  
  function replaceAndToggleEditButtons() {
    replaceEditButtons();
    toggleEditState();
  }
  
  function restoreAndToggleEditButton() {
    restoreEditButton();
    toggleEditState();
  }

  function setEditState(editState) {
    Cookies.set('editState', editState);
  }

  function getEditState() {
    return Cookies.get('editState');
  }

  function toggleEditState() {
    const editState = getEditState() !== 'false';
    setEditState(!editState);

    const editButtons = document.querySelectorAll('.list-edit-button, .x-form, .input-div');

    if (!editState) {
      editButtons.forEach((button) => {
            button.style.display = 'block';
        });
    } else {
      editButtons.forEach((button) => {
            button.style.display = 'none';
        });
    }
  }

  function initializeServingsInput() {
    const servingsInput = document.getElementById("servings-input");

    if (servingsInput) {
      servingsInput.addEventListener("keydown", function (event) {
        if (event.key === "Enter") {
          event.preventDefault();
          adjustServings(0);
        }
      });
    }
  }

  function initializeEditState() {
    const editState = getEditState() === 'true';

    if (!editState) {
        restoreEditButton();
    } else {
        replaceEditButtons();
    }

    if (!editState) {
      const editButtons = document.querySelectorAll('.list-edit-button, .x-form, .input-div');
      editButtons.forEach((button) => {
        button.style.display = 'none';
      });
    } else {
      const editButtons = document.querySelectorAll('.list-edit-button, .x-form, .input-div');
      editButtons.forEach((button) => {
        button.style.display = 'block';
      });
    }
  }

  window.addEventListener('load', initializeServingsInput);
  window.addEventListener('load', initializeEditState);
</script>